/* 
 * File:   ui.h
 * Author: hassa
 *
 * Created on January 23, 2023, 4:40 PM
 */
#include "../mega.h"
#ifndef UTILITY_H
#define	UTILITY_H
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u8Decoder  >                                                              |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u8Decoder                                                               |
 | < @Description       : n*2^n decoder                                                                   |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u8Decoder(uint8_t Value, uint8_t Number_of_outLine);

/*
  ---------------------------------------------------------------------------------------------------------
 |                            < map  >                                                                    |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t map                                                                     |
 | < @Description       : mapping value 0 to 1024 to 0 to 5                                               |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t map(uint32_t x, uint8_t in_min, uint32_t in_max, uint8_t out_min, uint8_t out_max);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < power2  >                                                                 |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t power2                                                                  |
 | < @Description       : mapping value 0 to 1024 to 0 to 5                                               |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t power2(uint8_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < Match_2BUF  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t Match_2BUF                                                              |
 | < @Description       : two buffer is equles or not                                                     |                    
 | < @return            :  0 not match                                                                    |
                        : 1 two buffer match                                                              |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t Match_2BUF(volatile uint8_t *buf1, volatile uint8_t *buf2, volatile uint8_t Length);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u16TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u16TOASII                                                               |
 | < @Description       : Convert 16Bit Binary To ASII                                                    |                    
 | < @return            :  Number Of Digit                                                                |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u16TOASII(char *s, uint16_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u8TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u8TOASII                                                               |
 | < @Description       : Convert 8Bit Binary To ASII                                                    |                    
 | < @return            :  Number Of Digit                                                                |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u8TOASII(char *s, uint8_t x);

#endif	/* UTILITY_H */

