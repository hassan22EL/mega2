/* 
 * File:   ui.h
 * Author: hassa
 *
 * Created on January 23, 2023, 4:40 PM
 */
#include "../mega.h"
#ifndef UTILITY_H
#define	UTILITY_H
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u8Decoder  >                                                              |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u8Decoder                                                               |
 | < @Description       : n*2^n decoder                                                                   |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u8Decoder(uint8_t Value, uint8_t Number_of_outLine);

/*
  ---------------------------------------------------------------------------------------------------------
 |                            < map  >                                                                    |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t map                                                                     |
 | < @Description       : mapping value 0 to 1024 to 0 to 5                                               |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t map(uint32_t x, uint8_t in_min, uint32_t in_max, uint8_t out_min, uint8_t out_max);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < power2  >                                                                 |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t power2                                                                  |
 | < @Description       : mapping value 0 to 1024 to 0 to 5                                               |                    
 | < @return            :  decode value                                                                   |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t power2(uint8_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < Match_2BUF  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t Match_2BUF                                                              |
 | < @Description       : two buffer is equles or not                                                     |                    
 | < @return            :  0 not match                                                                    |
                        : 1 two buffer match                                                              |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t Match_2BUF(uint8_t *buf1, uint8_t *buf2, uint8_t Length);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u16TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u16TOASII                                                               |
 | < @Description       : Convert 16Bit Binary To ASII                                                    |                    
 | < @return            :  Number Of Digit                                                                |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u16TOASII(uint8_t *s, uint16_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u8TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u8TOASII                                                               |
 | < @Description       : Convert 8Bit Binary To ASII                                                    |                    
 | < @return            :  Number Of Digit                                                                |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u8TOASII(uint8_t *s, uint8_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < hex8TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t hex8TOASII                                                              |
 | < @Description       : Convert 8Bit Hexnumber To ASII                                                  |                    
 | < @return            :  void                                                                           |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
void hex8TOASII(uint8_t *s, uint8_t x);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < cpyStringToBuff  >                                                        |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t hex8TOASII                                                              |
 | < @Description       : copy data from const location to run time buffer location                       | 
 | < @Param  s          : Const String                                                                    |
 | < @Param  x          : buffer                                                                          |  
 | < @Param len         : Length of data copy                                                             |
 | < @return            :  len of const string                                                            |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
void cpyStringToBuff(const char *s, uint8_t *x, uint8_t len);
/*
  ---------------------------------------------------------------------------------------------------------
 |                            < u32TOASII  >                                                             |
  ---------------------------------------------------------------------------------------------------------
 | < @Function          : uint8_t u32TOASII                                                               |
 | < @Description       : Convert 32Bit Binary To ASII                                                    |                    
 | < @return            :  Number Of Digit                                                                |                                                           |
  ---------------------------------------------------------------------------------------------------------
 */
uint8_t u32TOASII(uint8_t *s, uint32_t x);
/*
 ---------------------------------------------------------------------------------------------------------
 |                                 < Edit2Digit >                                                       |
 ---------------------------------------------------------------------------------------------------------
 | < @Function          : void Edit2Digit                                                                |  
 | < @Description       : Edit Digit Into Number                                                         |                                                    |
 | < @return            : New Number Value                                                               |                                                                                                              |
 ---------------------------------------------------------------------------------------------------------
 */
uint8_t Edit2Digit(uint8_t Number, uint8_t DigitIndex, uint8_t Value);
/*
 ---------------------------------------------------------------------------------------------------------
 |                                 < scllormessage>                                                      |
 ---------------------------------------------------------------------------------------------------------
 | < @Function          : void scllormessage                                                             |  
 | < @Description       :sclloer message into buffer                                                     |                                                        |
 | < @return            : void                                                                           |                                                                         |
 ---------------------------------------------------------------------------------------------------------
 */
void scllormessage(uint8_t *buffer, uint8_t *s, uint8_t MessageLength, uint8_t BufferSize);
/*
 ---------------------------------------------------------------------------------------------------------
 |                                 < DecToBcdFun>                                                      |
 ---------------------------------------------------------------------------------------------------------
 | < @Function          : void DecToBcdFun                                                             |  
 | < @Description       :convert number decmal to BCD                                                     |                                                        |
 | < @return            : void                                                                           |                                                                         |
 ---------------------------------------------------------------------------------------------------------
 */
uint8_t DecToBcdFun(uint8_t value);
/*
 ---------------------------------------------------------------------------------------------------------
 |                                 < BcdToDecFun>                                                       |
 ---------------------------------------------------------------------------------------------------------
 | < @Function          : void BcdToDecFun                                                               |  
 | < @Description       :convert number BCD to Decimal                                                   |                                                        |
 | < @return            : void                                                                           |                                                                         |
 ---------------------------------------------------------------------------------------------------------
 */
uint8_t BcdToDecFun(uint8_t value);

/**************************************************************************/
/*!
    @brief  Convert a string containing two digits to uint8_t, e.g. "09" returns
   9
    @param p Pointer to a string containing two digits
 */

/**************************************************************************/
uint8_t conv2d(uint8_t *p);

/**************************************************************************/
/*!
    @brief  number a string containing two digits to uint8_t, e.g. "09" returns
    @param p Pointer to a string containing two digits
 */

/**************************************************************************/
void print2d(uint8_t value, uint8_t * p, uint8_t start);
void print3d(uint8_t value, uint8_t *p, uint8_t start);
void ResetScollMessage();
void copyBuff(void *des, void *src, uint8_t len) ;
/*
  --------------------------------------------------------------------------------------------------------
  |                            < PrintMessage  >                                                   |
  --------------------------------------------------------------------------------------------------------
  | < @Function          : void  PrintMessage                                                       |
  | < @Description       : Print Message Into Buffer Array                                                    |
  |                      : PrintMessage                                   |                                                  |                                                           
  | < @return            : void                                                                          |                     
  --------------------------------------------------------------------------------------------------------
 */
 uint8_t PrintMessage(uint8_t *buf, uint8_t start, uint8_t MsgIndex , PGM_P const *message);
#endif	/* UTILITY_H */

